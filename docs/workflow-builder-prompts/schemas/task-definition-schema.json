{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Task Definition Schema",
  "description": "Schema for creating or modifying TaskDefinitions with their configuration and directives",
  "type": "object",
  "properties": {
    "action": {
      "type": "string",
      "enum": ["create", "update", "delete"],
      "description": "Action to perform on the task definition"
    },
    "task_definition": {
      "type": "object",
      "description": "Task definition properties",
      "properties": {
        "id": {
          "type": ["string", "null"],
          "description": "Existing task definition ID for updates, null for new tasks"
        },
        "name": {
          "type": "string",
          "maxLength": 80,
          "description": "Unique name for the task definition within the team",
          "pattern": "^[a-zA-Z0-9\\s\\-_]+$"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task's purpose and functionality"
        },
        "prompt": {
          "type": "string",
          "description": "The instruction text that guides task execution"
        },
        "task_runner_name": {
          "type": "string",
          "enum": [
            "AI Agent",
            "Claude AI",
            "Workflow Input",
            "Workflow Output",
            "Load from Database",
            "Save to Database",
            "Load CSV",
            "Filter Artifacts",
            "Split Artifacts",
            "Merge Artifacts",
            "Categorize Artifacts",
            "Classifier",
            "Image to Text Transcoder",
            "Page Organizer",
            "Sequential Category Matcher",
            "Artifact Level Projection",
            "Run Workflow",
            "Google Docs Template"
          ],
          "description": "Name of the task runner that executes this task"
        },
        "task_runner_config": {
          "type": ["object", "null"],
          "description": "Runner-specific configuration",
          "properties": {
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 600,
              "description": "Execution timeout in seconds (1-600)"
            },
            "include_text_sources": {
              "type": "boolean",
              "description": "Whether to append source text to output (AgentThreadTaskRunner)"
            },
            "deduplicate_names": {
              "type": "boolean",
              "description": "Whether to remove duplicate names from JSON output"
            },
            "mcp_server_id": {
              "type": ["string", "null"],
              "description": "MCP server ID for integration (optional)"
            }
          },
          "additionalProperties": true
        },
        "response_format": {
          "type": ["string", "null"],
          "enum": ["json_schema", "text", null],
          "description": "Expected response format from the task"
        },
        "input_artifact_mode": {
          "type": ["string", "null"],
          "enum": ["split", null],
          "description": "How input artifacts are processed: null (all together) or 'split' (separately)"
        },
        "input_artifact_levels": {
          "type": ["array", "null"],
          "description": "Array of artifact levels to include as input",
          "items": {
            "type": "string",
            "enum": ["document", "page", "paragraph", "sentence"]
          }
        },
        "output_artifact_mode": {
          "type": ["string", "null"],
          "enum": ["", "Per Process", "Group All", null],
          "description": "How output artifacts are generated"
        },
        "output_artifact_levels": {
          "type": ["array", "null"],
          "description": "Array of artifact levels to generate as output",
          "items": {
            "type": "string"
          }
        },
        "timeout_after_seconds": {
          "type": ["integer", "null"],
          "minimum": 1,
          "maximum": 3600,
          "description": "Task execution timeout in seconds"
        },
        "schema_definition_name": {
          "type": ["string", "null"],
          "description": "Name of the schema definition for structured responses"
        },
        "agent_name": {
          "type": ["string", "null"],
          "description": "Name of the AI agent to use for this task"
        },
        "task_queue_type": {
          "type": ["string", "null"],
          "description": "Queue type for task execution"
        }
      },
      "required": ["name", "description", "task_runner_name"],
      "additionalProperties": false
    },
    "directives": {
      "type": "array",
      "description": "Additional instructions for the task",
      "items": {
        "type": "object",
        "properties": {
          "section": {
            "type": "string",
            "enum": ["top", "bottom"],
            "description": "Whether directive goes before (top) or after (bottom) main prompt"
          },
          "content": {
            "type": "string",
            "description": "The directive content/instruction"
          },
          "position": {
            "type": "integer",
            "minimum": 0,
            "description": "Order position within the section"
          }
        },
        "required": ["section", "content"],
        "additionalProperties": false
      }
    },
    "schema_definition": {
      "type": ["object", "null"],
      "description": "JSON schema definition for structured responses",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 80,
          "description": "Name of the schema definition"
        },
        "description": {
          "type": "string",
          "description": "Description of what the schema represents"
        },
        "type": {
          "type": "string",
          "default": "Agent Response",
          "description": "Type of schema definition"
        },
        "schema_format": {
          "type": "string",
          "enum": ["json", "yaml", "typescript"],
          "default": "json",
          "description": "Format of the schema definition"
        },
        "schema": {
          "type": "object",
          "description": "The actual JSON schema definition",
          "properties": {
            "$schema": {
              "type": "string",
              "default": "http://json-schema.org/draft-07/schema#"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["type"],
          "additionalProperties": true
        }
      },
      "required": ["name", "schema"],
      "additionalProperties": false
    },
    "validation_results": {
      "type": "object",
      "description": "Validation results for the task definition",
      "properties": {
        "is_valid": {
          "type": "boolean",
          "description": "Whether the task definition is valid"
        },
        "errors": {
          "type": "array",
          "description": "Array of validation errors",
          "items": {
            "type": "string"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Array of validation warnings",
          "items": {
            "type": "string"
          }
        },
        "runner_compatibility": {
          "type": "object",
          "description": "Task runner compatibility check",
          "properties": {
            "compatible": {
              "type": "boolean"
            },
            "issues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["compatible"],
          "additionalProperties": false
        },
        "agent_compatibility": {
          "type": ["object", "null"],
          "description": "Agent compatibility check (if agent specified)",
          "properties": {
            "compatible": {
              "type": "boolean"
            },
            "recommended_alternatives": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["compatible"],
          "additionalProperties": false
        },
        "schema_validation": {
          "type": ["object", "null"],
          "description": "Schema validation results (if schema specified)",
          "properties": {
            "valid_schema": {
              "type": "boolean"
            },
            "schema_errors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["valid_schema"],
          "additionalProperties": false
        }
      },
      "required": ["is_valid", "errors", "warnings", "runner_compatibility"],
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata about the task definition",
      "properties": {
        "estimated_execution_time": {
          "type": "integer",
          "description": "Estimated execution time in seconds"
        },
        "complexity_level": {
          "type": "string",
          "enum": ["simple", "moderate", "complex"],
          "description": "Complexity level of the task"
        },
        "resource_requirements": {
          "type": "object",
          "description": "Estimated resource requirements",
          "properties": {
            "cpu_intensive": {
              "type": "boolean"
            },
            "memory_intensive": {
              "type": "boolean"
            },
            "requires_internet": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "tags": {
          "type": "array",
          "description": "Tags for categorizing the task",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["action", "task_definition", "validation_results"],
  "additionalProperties": false,
  "examples": [
    {
      "action": "create",
      "task_definition": {
        "id": null,
        "name": "Document Content Analysis",
        "description": "Analyzes document content to extract key insights, themes, and actionable information",
        "prompt": "Analyze the provided document and extract:\n1. Main themes and topics\n2. Key insights and findings\n3. Actionable recommendations\n4. Supporting evidence and data points\n\nProvide your analysis in the specified JSON format with confidence scores for each insight.",
        "task_runner_name": "AI Agent",
        "task_runner_config": {
          "timeout": 120,
          "include_text_sources": true,
          "deduplicate_names": false
        },
        "response_format": "json_schema",
        "input_artifact_mode": "split",
        "output_artifact_mode": "Per Process",
        "timeout_after_seconds": 180,
        "schema_definition_name": "Document Analysis Results",
        "agent_name": "GPT-4 Analysis Agent"
      },
      "directives": [
        {
          "section": "top",
          "content": "You are an expert document analyst with deep expertise in extracting meaningful insights from various types of content.",
          "position": 0
        },
        {
          "section": "bottom",
          "content": "Ensure all insights are backed by specific evidence from the document and include confidence scores.",
          "position": 0
        }
      ],
      "schema_definition": {
        "name": "Document Analysis Results",
        "description": "Structure for document analysis results including insights, themes, and recommendations",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Document Analysis Results",
          "type": "object",
          "properties": {
            "main_themes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "theme": {
                    "type": "string"
                  },
                  "confidence": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10
                  },
                  "evidence": {
                    "type": "string"
                  }
                },
                "required": ["theme", "confidence", "evidence"]
              }
            },
            "key_insights": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "insight": {
                    "type": "string"
                  },
                  "confidence": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10
                  },
                  "supporting_evidence": {
                    "type": "string"
                  }
                },
                "required": ["insight", "confidence"]
              }
            },
            "recommendations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "recommendation": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["high", "medium", "low"]
                  },
                  "rationale": {
                    "type": "string"
                  }
                },
                "required": ["recommendation", "priority", "rationale"]
              }
            }
          },
          "required": ["main_themes", "key_insights", "recommendations"]
        }
      },
      "validation_results": {
        "is_valid": true,
        "errors": [],
        "warnings": ["Consider setting a more specific timeout based on expected document size"],
        "runner_compatibility": {
          "compatible": true,
          "issues": []
        },
        "agent_compatibility": {
          "compatible": true,
          "recommended_alternatives": ["Claude Analysis Agent"],
          "issues": []
        },
        "schema_validation": {
          "valid_schema": true,
          "schema_errors": []
        }
      },
      "metadata": {
        "estimated_execution_time": 120,
        "complexity_level": "moderate",
        "resource_requirements": {
          "cpu_intensive": true,
          "memory_intensive": false,
          "requires_internet": true
        },
        "tags": ["analysis", "document-processing", "insights", "ai-powered"]
      }
    }
  ]
}